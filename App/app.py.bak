#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.6.8 (standalone edition) on Sat Jul 19 11:36:56 2014
#

import wx
import wx.grid

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyNotebook(wx.Notebook):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyNotebook.__init__
        kwds["style"] = 0
        wx.Notebook.__init__(self, *args, **kwds)
        self.notebook_2_pane_1 = wx.Panel(self, wx.ID_ANY)
        self.text_FileName = wx.StaticText(self.notebook_2_pane_1, wx.ID_ANY, _("File Name"))
        self.label_FileName = wx.StaticText(self.notebook_2_pane_1, wx.ID_ANY, _("Waiting for uplaoding..."))
        self.text_MaxStringLength = wx.StaticText(self.notebook_2_pane_1, wx.ID_ANY, _("Max String\nLength"))
        self.combo_box_MaxStringLength = wx.ComboBox(self.notebook_2_pane_1, wx.ID_ANY, choices=[_("2"), _("3"), _("4"), _("5(recommand)"), _("6"), _("7"), _("8"), _("9"), _("10")], style=wx.CB_DROPDOWN | wx.CB_DROPDOWN | wx.CB_READONLY)
        self.text_MinStringFreq = wx.StaticText(self.notebook_2_pane_1, wx.ID_ANY, _("Min String\nFreq"))
        self.combo_box_MinStringFreq = wx.ComboBox(self.notebook_2_pane_1, wx.ID_ANY, choices=[_("2"), _("3(recommand)"), _("4"), _("5"), _("6"), _("7"), _("8"), _("9"), _("10")], style=wx.CB_DROPDOWN | wx.CB_DROPDOWN | wx.CB_READONLY)
        self.text_colID = wx.StaticText(self.notebook_2_pane_1, wx.ID_ANY, _("which col\n(for Excel file)"))
        self.text_ctrl_ColID = wx.TextCtrl(self.notebook_2_pane_1, wx.ID_ANY, _("Enter \"Col ID\"!"))
        self.text_MaxList = wx.StaticText(self.notebook_2_pane_1, wx.ID_ANY, _("Max Result List"))
        self.text_ctrl_MaxListLength = wx.TextCtrl(self.notebook_2_pane_1, wx.ID_ANY, _("Enter a \"NUM\"!"))
        self.button_Confirm = wx.Button(self.notebook_2_pane_1, wx.ID_ANY, _("Confirm"))
        self.button_Clear = wx.Button(self.notebook_2_pane_1, wx.ID_ANY, _("Clear"))
        self.label_ResultPreview = wx.StaticText(self.notebook_2_pane_1, wx.ID_ANY, _("\nResult Previw\n"))
        self.grid_Result = wx.grid.Grid(self.notebook_2_pane_1, wx.ID_ANY, size=(1, 1))

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyNotebook.__set_properties
        self.AddPage(self.notebook_2_pane_1, _("Main"))
        self.text_FileName.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "MS Shell Dlg 2"))
        self.label_FileName.SetToolTipString(_("Show the file name you select"))
        self.text_MaxStringLength.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "MS Shell Dlg 2"))
        self.combo_box_MaxStringLength.SetToolTipString(_("max string length for N-GRAM "))
        self.combo_box_MaxStringLength.SetSelection(3)
        self.text_MinStringFreq.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "MS Shell Dlg 2"))
        self.combo_box_MinStringFreq.SetToolTipString(_("minimum string frequency"))
        self.combo_box_MinStringFreq.SetSelection(1)
        self.text_colID.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "MS Shell Dlg 2"))
        self.text_ctrl_ColID.SetToolTipString(_("Enter the Excel Col ID in \"English\""))
        self.text_MaxList.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "MS Shell Dlg 2"))
        self.text_ctrl_MaxListLength.SetToolTipString(_("limit amount of the result"))
        self.button_Confirm.SetBackgroundColour(wx.SystemSettings_GetColour(wx.SYS_COLOUR_HIGHLIGHT))
        self.button_Confirm.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "MS Shell Dlg 2"))
        self.button_Clear.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.label_ResultPreview.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "MS Shell Dlg 2"))
        self.grid_Result.CreateGrid(15, 2)
        self.grid_Result.EnableEditing(0)
        self.grid_Result.SetColLabelValue(0, _("Terms"))
        self.grid_Result.SetColLabelValue(1, _("Freq"))
        self.grid_Result.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "MS Shell Dlg 2"))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyNotebook.__do_layout
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_5 = wx.GridSizer(1, 3, 0, 0)
        grid_sizer_6 = wx.GridSizer(1, 3, 0, 0)
        grid_sizer_4 = wx.GridSizer(1, 3, 0, 0)
        grid_sizer_3 = wx.GridSizer(1, 3, 0, 0)
        grid_sizer_2 = wx.GridSizer(1, 3, 0, 0)
        grid_sizer_1 = wx.GridSizer(1, 3, 0, 0)
        grid_sizer_1.Add(self.text_FileName, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add((10, 20), 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.label_FileName, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_4.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        grid_sizer_2.Add(self.text_MaxStringLength, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add((10, 20), 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.combo_box_MaxStringLength, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_4.Add(grid_sizer_2, 1, wx.EXPAND, 0)
        grid_sizer_3.Add(self.text_MinStringFreq, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add((10, 20), 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add(self.combo_box_MinStringFreq, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_4.Add(grid_sizer_3, 1, wx.EXPAND, 0)
        grid_sizer_4.Add(self.text_colID, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_4.Add((10, 20), 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_4.Add(self.text_ctrl_ColID, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_4.Add(grid_sizer_4, 1, wx.EXPAND, 0)
        grid_sizer_6.Add(self.text_MaxList, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_6.Add((10, 20), 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_6.Add(self.text_ctrl_MaxListLength, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_4.Add(grid_sizer_6, 1, wx.EXPAND, 0)
        grid_sizer_5.Add(self.button_Confirm, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_5.Add((20, 20), 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_5.Add(self.button_Clear, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_4.Add(grid_sizer_5, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_4, 1, wx.EXPAND, 0)
        sizer_2.Add((50, 20), 0, wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_5.Add(self.label_ResultPreview, 0, wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_5.Add(self.grid_Result, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_5, 1, wx.EXPAND, 0)
        self.notebook_2_pane_1.SetSizer(sizer_2)
        # end wxGlade

# end of class MyNotebook

class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.MyApp_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu_sub = wx.Menu()
        wxglade_tmp_menu_sub.Append(wx.ID_ANY, _(".txt"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu_sub.Append(wx.ID_ANY, _(".xlsx"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendMenu(wx.ID_ANY, _("Open"), wxglade_tmp_menu_sub, "")
        wxglade_tmp_menu.Append(wx.ID_ANY, _("Save"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        menuQuit = wxglade_tmp_menu.Append(wx.ID_ANY, _("Quit"), _("Bye Bye!"), wx.ITEM_NORMAL)
        self.MyApp_menubar.Append(wxglade_tmp_menu, _("File"))
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.ID_ANY, _("How to Use"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(wx.ID_ANY, _("About"), "", wx.ITEM_NORMAL)
        self.MyApp_menubar.Append(wxglade_tmp_menu, _("Help"))
        self.SetMenuBar(self.MyApp_menubar)
        # Menu Bar end
        self.MyApp_statusbar = self.CreateStatusBar(1, 0)
        self.notebook_2 = MyNotebook(self, wx.ID_ANY)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

        # Bind function to menu
        self.Bind(wx.EVT_MENU, self.quitApp, menuQuit)

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle(_("MyApp"))
        self.SetSize((756, 550))
        self.MyApp_statusbar.SetStatusWidths([-1])
        # statusbar fields
        MyApp_statusbar_fields = [_("Waiting for loading file")]
        for i in range(len(MyApp_statusbar_fields)):
            self.MyApp_statusbar.SetStatusText(MyApp_statusbar_fields[i], i)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(self.notebook_2, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def quitApp(self, event):
        self.Close(True)

# end of class MyFrame
class MyApp(wx.App):
    def OnInit(self):
        wx.InitAllImageHandlers()
        MyApp = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(MyApp)
        MyApp.Show()
        return 1

# end of class MyApp

if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = MyApp(0)
    app.MainLoop()
